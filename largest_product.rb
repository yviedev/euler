=begin
The four adjacent digits in the 1000-digit number that have the greatest product are 9 × 9 × 8 × 9 = 5832.

73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450

Find the thirteen adjacent digits in the 1000-digit number that have the greatest product. What is the value of this product?
=end
array = []

number = 
"73167176531330624919225119674426574742355349194934
96983520312774506326239578318016984801869478851843
85861560789112949495459501737958331952853208805511
12540698747158523863050715693290963295227443043557
66896648950445244523161731856403098711121722383113
62229893423380308135336276614282806444486645238749
30358907296290491560440772390713810515859307960866
70172427121883998797908792274921901699720888093776
65727333001053367881220235421809751254540594752243
52584907711670556013604839586446706324415722155397
53697817977846174064955149290862569321978468622482
83972241375657056057490261407972968652414535100474
82166370484403199890008895243450658541227588666881
16427171479924442928230863465674813919123162824586
17866458359124566529476545682848912883142607690042
24219022671055626321111109370544217506941658960408
07198403850962455444362981230987879927244284909188
84580156166097919133875499200524063689912560717606
05886116467109405077541002256983155200055935729725
71636269561882670428252483600823257530420752963450" 

#.split(/\n/)"



without_zero = number.gsub("0", "\n")

#puts without_zero
#p without_zero

number2 = %("7316717653133\n624919225119674426574742355349194934\n9698352\n3127745\n6326239578318\n169848\n1869478851843\n8586156\n7891129494954595\n17379583319528532\n88\n5511\n1254\n698747158523863\n5\n71569329\n963295227443\n43557\n6689664895\n4452445231617318564\n3\n98711121722383113\n6222989342338\n3\n81353362766142828\n6444486645238749\n3\n3589\n729629\n49156\n44\n77239\n71381\n5158593\n796\n866\n7\n1724271218839987979\n87922749219\n169972\n888\n93776\n65727333\n\n1\n5336788122\n2354218\n975125454\n594752243\n525849\n771167\n556\n136\n48395864467\n6324415722155397\n53697817977846174\n6495514929\n862569321978468622482\n83972241375657\n56\n5749\n2614\n79729686524145351\n\n474\n8216637\n4844\n319989\n\n\n889524345\n658541227588666881\n1642717147992444292823\n863465674813919123162824586\n178664583591245665294765456828489128831426\n769\n\n42\n24219\n22671\n556263211111\n937\n5442175\n694165896\n4\n8\n\n71984\n385\n96245544436298123\n9878799272442849\n9188\n8458\n156166\n979191338754992\n\n524\n6368991256\n7176\n6\n\n58861164671\n94\n5\n77541\n\n22569831552\n\n\n55935729725\n7163626956188267\n4282524836\n\n82325753\n42\n75296345\n").split(/\n/).reject(&:empty?)

#p number2

over_twelve = []

number2.each do |string|
	if string.length > 12 
		over_twelve << string 
	end
end

puts over_twelve.sort!
puts

product = 1
over_twelve.each do |string|
	if string.length == 13 
		string.chars.each do |x|
			product *= x.to_i 
		end
		p product
	end
end



